# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ..

# Where to find user code.
USER_DIR = ../src

# build result patch dir.
BUILD_OBJ_DIR = $(GTEST_DIR)/target/obj
BUILD_DIR = $(GTEST_DIR)/target/plugins

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CCFLAGS += -isystem $(GTEST_DIR)/include
# CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
OBJ_NAME = testmain

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/*.h

# House-keeping build targets.

all : $(OBJ_NAME)

clean :
	$(RM) $(BUILD_DIR)/$(OBJ_NAME) $(BUILD_OBJS)

#Yout Project Codec Rely On
OBJS = testmain.o list_heap.o list_stack.o list.o
BUILD_OBJS = $(addprefix $(BUILD_OBJ_DIR)/, $(OBJS))

$(OBJ_NAME) : $(OBJS)
	echo $(BUILD_OBJS)
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -o $(BUILD_DIR)/$@ $(BUILD_OBJS)

testmain.o : $(USER_DIR)/testmain.c
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c -o $(BUILD_OBJ_DIR)/$@ $(USER_DIR)/testmain.c

list_heap.o : $(USER_DIR)/list_heap.c
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c -o $(BUILD_OBJ_DIR)/$@ $(USER_DIR)/list_heap.c

list_stack.o : $(USER_DIR)/list_stack.c
	$(CC) $(CPPFLAGS) $(CXXFLAGS) -c -o $(BUILD_OBJ_DIR)/$@ $(USER_DIR)/list_stack.c

list.o : $(USER_DIR)/list.c
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $(BUILD_OBJ_DIR)/$@ $(USER_DIR)/list.c
